//*****************************************************************************
//*****************************************************************************
//  FILENAME: PWM8_NB_Out.h
//   Version: 2.60, Updated on 2012/9/21 at 11:59:18
//  Generated by PSoC Designer 5.3.2710
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef PWM8_NB_Out_INCLUDE
#define PWM8_NB_Out_INCLUDE

#include <m8c.h>

#pragma fastcall16 PWM8_NB_Out_EnableInt
#pragma fastcall16 PWM8_NB_Out_DisableInt
#pragma fastcall16 PWM8_NB_Out_Start
#pragma fastcall16 PWM8_NB_Out_Stop
#pragma fastcall16 PWM8_NB_Out_bReadCounter              // Read  DR0
#pragma fastcall16 PWM8_NB_Out_WritePeriod               // Write DR1
#pragma fastcall16 PWM8_NB_Out_bReadPulseWidth           // Read  DR2
#pragma fastcall16 PWM8_NB_Out_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bPWM8_NB_Out_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bPWM8_NB_Out_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the PWM8_NB_Out API.
//-------------------------------------------------

extern void PWM8_NB_Out_EnableInt(void);                        // Proxy Class 1
extern void PWM8_NB_Out_DisableInt(void);                       // Proxy Class 1
extern void PWM8_NB_Out_Start(void);                            // Proxy Class 1
extern void PWM8_NB_Out_Stop(void);                             // Proxy Class 1
extern BYTE PWM8_NB_Out_bReadCounter(void);                     // Proxy Class 2
extern void PWM8_NB_Out_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE PWM8_NB_Out_bReadPulseWidth(void);                  // Proxy Class 1
extern void PWM8_NB_Out_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bPWM8_NB_Out_ReadCounter(void);            // Deprecated
extern BYTE bPWM8_NB_Out_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for PWM8_NB_Out API's.
//--------------------------------------------------

#define PWM8_NB_Out_CONTROL_REG_START_BIT      ( 0x01 )
#define PWM8_NB_Out_INT_REG_ADDR               ( 0x0e1 )
#define PWM8_NB_Out_INT_MASK                   ( 0x08 )


//--------------------------------------------------
// Constants for PWM8_NB_Out user defined values
//--------------------------------------------------

#define PWM8_NB_Out_PERIOD                     ( 0xff )
#define PWM8_NB_Out_PULSE_WIDTH                ( 0x00 )


//-------------------------------------------------
// Register Addresses for PWM8_NB_Out
//-------------------------------------------------

#pragma ioport  PWM8_NB_Out_COUNTER_REG:    0x02c          //DR0 Count register
BYTE            PWM8_NB_Out_COUNTER_REG;
#pragma ioport  PWM8_NB_Out_PERIOD_REG: 0x02d              //DR1 Period register
BYTE            PWM8_NB_Out_PERIOD_REG;
#pragma ioport  PWM8_NB_Out_COMPARE_REG:    0x02e          //DR2 Compare register
BYTE            PWM8_NB_Out_COMPARE_REG;
#pragma ioport  PWM8_NB_Out_CONTROL_REG:    0x02f          //Control register
BYTE            PWM8_NB_Out_CONTROL_REG;
#pragma ioport  PWM8_NB_Out_FUNC_REG:   0x12c              //Function register
BYTE            PWM8_NB_Out_FUNC_REG;
#pragma ioport  PWM8_NB_Out_INPUT_REG:  0x12d              //Input register
BYTE            PWM8_NB_Out_INPUT_REG;
#pragma ioport  PWM8_NB_Out_OUTPUT_REG: 0x12e              //Output register
BYTE            PWM8_NB_Out_OUTPUT_REG;
#pragma ioport  PWM8_NB_Out_INT_REG:       0x0e1           //Interrupt Mask Register
BYTE            PWM8_NB_Out_INT_REG;


//-------------------------------------------------
// PWM8_NB_Out Macro 'Functions'
//-------------------------------------------------

#define PWM8_NB_Out_Start_M \
   PWM8_NB_Out_CONTROL_REG |=  PWM8_NB_Out_CONTROL_REG_START_BIT

#define PWM8_NB_Out_Stop_M  \
   PWM8_NB_Out_CONTROL_REG &= ~PWM8_NB_Out_CONTROL_REG_START_BIT

#define PWM8_NB_Out_EnableInt_M   \
   M8C_EnableIntMask(PWM8_NB_Out_INT_REG, PWM8_NB_Out_INT_MASK)

#define PWM8_NB_Out_DisableInt_M  \
   M8C_DisableIntMask(PWM8_NB_Out_INT_REG, PWM8_NB_Out_INT_MASK)

#endif
// end of file PWM8_NB_Out.h
